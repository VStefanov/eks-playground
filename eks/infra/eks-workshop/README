Create EKS cluster:

`eksctl create cluster -f eks.yaml`


Setup IAM WebIdentiy - use the one from the cluster, this can be done with the following command:
    `eksctl utils associate-iam-oidc-provider --cluster=<name> --region=eu-west-1 --approve`


Calico installation guide:

 `https://docs.tigera.io/calico/latest/getting-started/kubernetes/managed-public-cloud/eks`

Setup Calico for Kubernetes but leave AWS VPC CNI instead of Calico CNI:

```
 kubectl create -f - <<EOF
kind: Installation
apiVersion: operator.tigera.io/v1
metadata:
  name: default
spec:
  cni:
    type: AmazonVPC
EOF
```



ALB Ingress Installation Steps:

`curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.5.4/docs/install/iam_policy.json`

```
aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam_policy.json
```

```
    oidc_id=$(aws eks describe-cluster --name <name> --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)

    aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4
```

```
cat >load-balancer-role-trust-policy.json <<EOF
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "Federated": "arn:aws:iam::<account_id>:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/<oidc_id>"
            },
            "Action": "sts:AssumeRoleWithWebIdentity",
            "Condition": {
                "StringEquals": {
                    "oidc.eks.eu-west-1.amazonaws.com/id/<oidc_id>:aud": "sts.amazonaws.com",
                    "oidc.eks.eu-west-1.amazonaws.com/id/<oidc_id>:sub": "system:serviceaccount:kube-system:aws-load-balancer-controller"
                }
            }
        }
    ]
}
EOF
```

```
aws iam create-role \
  --role-name AmazonEKSLoadBalancerControllerRole \
  --assume-role-policy-document file://"load-balancer-role-trust-policy.json"
```
```
aws iam attach-role-policy \
  --policy-arn arn:aws:iam::<account_id>:policy/AWSLoadBalancerControllerIAMPolicy \
  --role-name AmazonEKSLoadBalancerControllerRole
```

```
cat >aws-load-balancer-controller-service-account.yaml <<EOF
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: aws-load-balancer-controller
  name: aws-load-balancer-controller
  namespace: kube-system
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::<account_id>:role/AmazonEKSLoadBalancerControllerRole
EOF
```
```
kubectl apply \
    --validate=false \
    -f https://github.com/jetstack/cert-manager/releases/download/v1.12.3/cert-manager.yaml
```

```
curl -Lo v2_5_4_full.yaml https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.5.4/v2_5_4_full.yaml
```

`sed -i.bak -e '596,604d' ./v2_5_4_full.yaml`


`sed -i.bak -e 's|your-cluster-name|<name>|' ./v2_5_4_full.yaml`

`kubectl apply -f v2_5_4_full.yaml`

`curl -Lo v2_5_4_ingclass.yaml https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.5.4/v2_5_4_ingclass.yaml`

`kubectl apply -f v2_5_4_ingclass.yaml`
